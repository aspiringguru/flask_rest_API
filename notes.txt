PS D:\2017_working\udemy_flask_rest_course\working\section4> .\venv\Scripts\activate.bat



https://uoa-eresearch.github.io/eresearch-cookbook/recipe/2014/11/20/conda/

https://github.com/aspiringguru/flask_rest_API

https://github.com/schoolofcode-me/rest-api-sections/tree/master/section6

PS D:\DProgramFiles\python3Anaconda\envs\venv\Lib\venv\scripts\nt>

http://ec2-54-190-59-140.us-west-2.compute.amazonaws.com:5000

ssh -i /c/Users/bmt/.ssh/aws-key.pem  ubuntu@ec2-54-190-59-140.us-west-2.compute.amazonaws.com
cd /home/ubuntu/udemy_rest_api_working/ch4/code
source ../venv/bin/activate
python app.py

#packages installed
pip install Flask
pip install Flask-JWT
pip install Flask-RESTful
pip install Flask-SQLAlchemy

git checkout -b [name_of_your_new_branch]
git branch
git add .
git commit -m ''
git push origin [name_of_your_new_branch]


L81_completed
chapter_6_restart
master
old-state

L85_wip_forum_q1

pre change  in L85@11:19
@jwt_required()
def put(self, name):
    data = Item.parser.parse_args()
    item = ItemModel.find_by_name(name)
    updated_item = ItemModel(name, data['price'])
    if item is None:
        try:
            updated_item.insert()
        except:
            return {"message": "An error occurred inserting the item."}, 500
    else:
        try:
            updated_item.update()
        except:
            raise
            return {"message": "An error occurred updating the item."}, 500
    return updated_item.json()
